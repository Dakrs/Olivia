@model Olivia.Models.Recipe
@{
    Layout = "~/Views/Shared/_LayoutTest.cshtml";
    TempData.Keep("Id");
    string image_string;
    if (ViewBag.image != null)
    {
        image_string = "data:image;base64," + System.Convert.ToBase64String(ViewBag.image);
    }
    else
    {
        image_string = "/layout/assets/img/wallpaperLoggedin.jpg";
    }
}
<div class="header pb-8 pt-5 pt-lg-8 d-flex align-items-center" style="height: 200px; background-image: url(@image_string); background-size: cover; background-position: center;">
    <div id="textContainer" style="margin-left:3%">
        <p>
            <h1 style="font-size:54px;" class="retroshadow"> @Model.Name </h1>
        </p>
    </div>
</div>
<div class="container-fluid mt--7">
    <div class="card" style="border-radius: 55px 55px 55px 55px; overflow: hidden !important; margin-top:8%">
        <div class="card-body" style="padding:0;">
            <div class="bd-example">
                <div id="RecipeWalkthrough" class="carousel slide carousel-fade" data-ride="carousel" data-wrap="false" data-interval="false">
                    <ol class="carousel-indicators">
                        @for (int i = 0; i <= Model.Instructions.Count; i++) {
                            if (i == 0)
                            {
                                <li data-target="#RecipeWalkthrough" data-slide-to="0" class="active"></li>
                            }
                            else {
                                <li data-target="#RecipeWalkthrough" data-slide-to="@i"></li>
                            }
                        }
                    </ol>
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img src="/layout/assets/img/img1.jpg" class="d-block w-100" alt="..." style="border-radius: 55px 55px 55px 55px;">
                            <div class="carousel-caption d-none d-md-block">
                                <h1 class="display-3" style="color:white">Step 0</h1>
                                <p class="display-3">Walkthrough is about to start</p>
                            </div>
                        </div>
                        @for (int i = 1; i <= Model.Instructions.Count; i++)
                        {
                            <div class="carousel-item">
                                <img src="/layout/assets/img/img1.jpg" class="d-block w-100" alt="..." style="border-radius: 55px 55px 55px 55px;">
                                  <div class="carousel-caption d-none d-md-block">
                                     <h1 class="display-3" style="color:white">Step @i</h1>
                                     <p class="display-3">@Model.Instructions[i - 1].Designation</p>
                                  </div>
                            </div>
                        }
                    </div>
                    <a class="carousel-control-prev" href="#RecipeWalkthrough" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#RecipeWalkthrough" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="RecipeRate" tabindex="-1" role="dialog" aria-labelledby="RecipeRate" aria-hidden="true">
        <div class="modal-dialog modal-danger modal-dialog-centered modal-" role="document">
            <div class="modal-content bg-gradient-danger">

                <div class="modal-header">
                    <h4 class="modal-title" id="modal-title-notification">Your attention is required</h4>
                    <button id="noRateBtn" type="button" class="close" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>

                <div class="modal-body">
                    <div class="py-3 text-center">
                        <i class="ni ni-bell-55 ni-3x"></i>
                        <h4 class="heading mt-4">Recipe Completed</h4>
                        <p>Do you want to rate it?</p>
                        <input id="inputRating" type="text" class="form-control" placeholder="Stars (1-5)" style="margin-left:38%;width:24%" />
                    </div>
                </div>

                <div class="modal-footer">
                    <button id="RateBtn" type="button" class="btn btn-white">Rate</button>
                </div>

            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $(".carousel-control-next").click(function () {


            $("#RecipeWalkthrough").carousel("next");
            var totalItems = $('.carousel-item').length;
            var currentIndex = $('div.active').index() + 1;
            /* $('#myVar').val(currentIndex);
                console.log(Title);
               readOutLoud(String(Title)); */
            if (totalItems == currentIndex) {
                $('#RecipeRate').modal('show');
            }
        });
        $(".carousel-control-prev").click(function () {

            $("#RecipeWalkthrough").carousel("prev");
            
        });
        $("#RateBtn").click(function () {
            var rating = $('#inputRating').val();
            if (Math.floor(rating) == rating && $.isNumeric(rating) && rating >= 1 && rating <= 5) {
                window.location.href = "/Cook/Rating/".concat(rating);
            }
            else {
                $('#inputRating').val("Invalid Input");
            }

        });
        $("#noRateBtn").click(function () {
            window.location.href = "/Cook/History";
        });
    });
</script>


<!-- Speech SDK reference sdk. -->
<script src="~/js/microsoft.cognitiveservices.speech.sdk.bundle.js"></script>
<script>
    var speechConfig;
    speechConfig = SpeechSDK.SpeechConfig.fromSubscription("3aadf2f2ea99425199b47ed54bc4081f", "westus");

    speechConfig.speechRecognitionLanguage = "pt-PT";
    var audioConfig = SpeechSDK.AudioConfig.fromDefaultMicrophoneInput();
    recognizer = new SpeechSDK.SpeechRecognizer(speechConfig, audioConfig);


    //  The event recognizing signals that an intermediate recognition result is received.
    recognizer.recognizing = function (s, e) {
        var texto = e.result.text;
        
        console.log('recognizing text', e.result.text);
    };

    //  The event recognized signals that a final recognition result is received.
    recognizer.recognized = function (s, e) {
        var texto = e.result.text;
        if ( texto.includes("avançar") || texto.includes("avança"))
            $(".carousel-control-next").click();
        if (texto.includes("recuar") || texto.includes("recua"))
            $(".carousel-control-prev").click();
    };
    recognizer.startContinuousRecognitionAsync();
</script>